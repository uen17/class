
HTML 标签
目录

    HTML语法规范
    HTML基本结构标签
    开发工具
    HTML常用标签
    HTML中的注释和特殊字符

目标

    标签的书写注意规范
    能够写出HTML骨架标签
    能够写出超链接标签
    能够写出图片标签并说出alt和title的区别
    能够说出相对路径的三种形式

1. HTML语法
1.1 HTML语法规范

    HTML标是由尖括号包围的关键词，例如<html>。
    HTML标签通常是成对出现的，例如<html>和</html>，我们称为双标签。标签对中的第一个标签是开始标签，第二个标签是结束标签。
    有些特殊的标签必须是单个标签（极少情况），例如<br />，我们称之为单标签。

    开始标签<html>
    结束标签</html>
    单标签 <br />

1.2 标签关系

双标签关系可以分为两类，包含关系和并列关系。
包含关系

<head>
    <title></title>
</head>

并列关系

<head></head>
<body></body>

2. HTML基本结构标签
2.1 第一个HTML网页

每个页面都会有一个基本的结构标签（也称为骨架标签），页面内容也是在这基本标签上书写。 HTML页面页称为HTML文档

<html>
    <head>
        <title>我的第一个页面</title>
    </head>
    <body>
        你我之间，黑马洗练，月薪过万，一飞冲天
    </body>
<html>

标签名 	定义 	说明
<html></html> 	HTML标签 	页面中最大的标签，我们称为根标签
<head></head> 	文档的头部 	注意在head标签中我们必须设置的标签是title
<title></title> 	文档的标题 	让页面拥有一个属于自己的网页标题
<body></body> 	文档的主体 	元素包含文档的所有内容，页面内容基本都是放到body里面的

HTML文档的后缀名必须是.html或.htm，浏览器的作用读取HTML文档，并以网页的形式显示出它们。 此时，用浏览器打开这个网页，我们就可以预览我们写的第一个HTML文件了。
2.2 基本结构标签总结

    title 基本结构标签总结
    section 标签结构
        HTML(根标签)：20-01-01,20-01-02
        head：1d
        body: 1d

3. 网页开发工具
3.1 VSCode的使用

    双击打开软件
    新建文件（Ctrl + N）
    保存（Ctrl + S），注意移动要保存为.html文件
    Ctrl + 加号键，Ctrl + 减号键 可以放大缩小视图
    生成页面骨架结构，输入！按下Tab键
    利用插件在浏览器中预览网页：单击鼠标右键，在弹出出口中点击‘Open in Default Browser’.

3.2 Vscode插件安装

Plugin List:
插件 	作用
Chinese Language Pack for VS 	中文语言包
Open in Browser 	右击选择浏览器打开html文件
JS-CSS-HTML Formatter 	每次保存，都会自动格式化js css 和html代码
Auto Rename Tag 	自动重命名配对的HTML/XML标签
CSS Peek 	追踪至样式
3.3 VSCode 工具生成骨架标签新增代码

    <!DOCTYPE>标签
    lang语言
    charset字符集

3.3.1 文档类型声明标签<!DOCTYPE>

<!DOCTYPE>文档类型声明，作用就是告诉浏览器使用哪种HTML版本来显示网页。

    <!DOCTYPE html>

以上代码的意思是：当前页面采取的是HTML5版本来显示网页。 注意：

    <!DOCTYPE>声明位于文档中的最前面的位置，处于<html>标签之前。
    <!DOCTYPE>不是一个HTML标签，它就是文档类型声明标签。

3.3.2 lang语言种类

<html lang="en">

用来定义当前文档显示的语言。

    en定义语言为英语。
    zh-CN定义语言为中文。

简单来说，定义为en就是英文网页，定义为zh-CN就是中文网页。 其实对于文档显示来说，定义为en的文档也可以显示中文，定义成zh-CN的文档也可以显示英文 这个属性对浏览器和搜索引擎（baidu、Google等）还是有作用的。
3.3.3 字符集

<meta Charset="UTF-8">

字符集（Character set）是多个字符的集合。以便计算机能够识别和存储各种文字。 在<head>标签内，可以用过<meta>标签的charset属性来规定HTML文档应该使用哪种字符编码。 charset常用的值有：GB2312、BIG5、GBK和UTF-8，其中UTF-8也被称为万国码，基本包含了全世界所有国家需要用到的字符。 注意：上面语法是必须要写的代码，否则可能引起乱码的情况。一般情况下，统一使用“UTF-8”，不要写成'utf8'等。
3.3.4 总结

    以上三个代码VScode自动生成
    <!DOCTYPE>文档类型声明标签，告诉浏览器这个网页采用html5版本来显示页面。
    <html lang="en">告诉浏览器或者搜索引擎这是个英文网站，本页面采取英文来显示。
    <meta charset=“UTF-8”>必须写，采取UTF-8保存文字。如果不写就会乱码，具体原理后面分析。

4.HTML常用标签
4.1 标签语义

学习标签是有技巧的，重点是记住每个标签的语义。简单理解就是指标签的含义，即这个标签是用来干嘛的。 根据标签的语义，在合适的地方给一个最为合理的标签，可以让页面结构更清晰。
4.2 标题标签<h1>-<h6>(重要)

为了使网页更具有语义化，我们经常会在页面中用到标题标签。HTML提供了6个登记的网页标题。即<h1>-<h6>。

<h1>标题一共六级选，</h1>
<h2>文字加粗一行显。</h2>
<h3>由大到小依次减，</h3>
<h4>从重到轻随之变。</h4>
<h5>语法规范书写后，</h5>
<h6>具体效果刷新见。</h6>

单词head的缩写，意为头部、标题。 标签语义：作为标题使用，并且一句重要性递减。
特点：

    加了标题的文字会变得更粗，字号也会依次变大。
    一个标题独占一行。

4.3 段落和换行标签（重要）
4.3.1 段落标签\<p>\</p>

在网页中，要把文字有条理地显示出来，就需要将这些文字分段显示。在HTML标签中，<p>标签用于定义段落，它可以将整个网页分为若干段落。

    <p> 我是一个段落标签</p>

单词paragraph的缩写，意为段落。 标签语义：可以把HTML文档分割成若干段落。
特点：

    文本在一个段落中会根据浏览器的大小自动换行。
    段落和段落之间保有空隙。

4.3.2 换行标签<br />

在HTML中，一个段落中的文字会从左到右依次排列，直到浏览器的右端，然后才会自动换行。如果希望某段文本强制换行显示，就需要使用换行标签<br />。

    <br />

单词break的缩写，意为打断、换行。 标签语义：强制换行。
特点：

    <br /> 是个单标签。
    <br /> 标签只是简单地开始新的一行，跟段落不一样，段落之间会插入一些行距。

4.4 文本格式化标签

在网页中，有时需要为文字设置粗体、斜体或<u>下划线</u>效果，这时就需要用到HTML中的文本格式标签，使文字以特殊的方式显示。 标签语义：突出重要性，比普通文字更重要。
语义 	标签 	说明
加粗 	<strong></strong>或者<b></b> 	更推荐使用/<strong>标签加粗，语义更强烈
倾斜 	<em></em>或者<i></i> 	更推荐使用/<em>标签加粗，语义更强烈
删除线 	<del></del>或者<s></s> 	更推荐使用/<del>标签加粗，语义更强烈
下划线 	<ins></ins>或者<u></u> 	更推荐使用/<ins>标签加粗，语义更强烈

重点记住<strong>加粗</strong>和<em>倾斜</em>
4.5 <div>和<span>标签

<div>和<span>是没有语义的，它们就是一个盒子，用来装内容的。

<div>这是头部</div>
<span>今日价格</span>

div是division的缩写，表示分割、分区。span意味跨度、跨距。
特点：

    <div>标签用来布局，但是现在一行只能放一个</div>。大盒子
    <span>标签用来布局，一行上可以多个<span>。小盒子

4.6 图像标签和路径（重点）
4.6.1 图像标签

在HTML标签中，<img>标签用于定义HTML页面中的图像。

    <img src="图像URL" />

单词Image的缩写，意为图像。 src是<img>的必须属性，它用于指定图像文件的路径和文件名。 所谓属性：简单理解为属于这个图像标签的特性。
属性 	属性值 	说明
src 	图片路径 	必须属性
alt 	文本 	替换文本。图像不能显示的文字
title 	文本 	提示文本。鼠标放到图像上，显示的文字
width 	像素 	设置图像的宽度
height 	像素 	设置图像的高度
border 	像素 	设置图像的边框粗细
Tips:

    border通常在CSS中设置
    图像标签可以拥有多个属性，必须写在标签名的后面。
    属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。
    属性采取键值对的格式，即key="value"的格式，属性="属性值"

重点掌握点：

Q：请说出图像标签哪个属性是必须属性？ A：src Q：请说出图像标签中alt和title属性区别？ A：alt->图像加载失败时显示的文本；<br />title->鼠标移动到图像时显示的文本。
4.6.2 路径

前期铺垫知识
1.目录文件夹和根目录：
实际工作中，我嗯的文件不能随意乱放，否则用起来很难快速地找到它们，因此需要一个文件夹来管理他们。
**目录文件夹**：就是普通文件夹，路面只不过存放了我们做页面所需要的相关素材，比如html文件、图片等。
**根目录**：打开目录文件夹的第一层就是根目录。

 2.VSCode打开目录文件夹
文件->打开文件夹，选择目录文件夹。后期非常方便管理文件。

相对路径：以引用文件所在位置为参考基础，而建立出的目录路径。 这里简单来说，图像相对于HTML页面的位置
相对路径分类 	符号 	说明
同一级路径 		图像文件位于HTML文件同一级 如<img src="baidu.png" />
下一级路径 	/ 	图像文件位于HTML文件的下一级 如<img src="./pic/baidu.png" />
上一级路径 	../ 	图像文件位于HTML文件的上一级 如<img src="../baidu.png"

相对路径是从代码所在的这个文件出发，去寻找目标文件的，而我们这里所说的上一级、下一级和同一级就是图片相对于HTML页面的位置。

绝对路径：是指目录下的绝对位置，直接到达目标位置，通常从盘符开始的路径。 例如，“C:\users\lons\desktop\file” 或完整的网络地址：“https://www.baidu.com/image/logo.gif”。
Tips：

    绝对路径的用的是反斜杠\,相对路径用的是斜杠/

4.7 超链接标签（重要）

在HTML标签中，<a>标签用于定义超链接，作用是从一个页面链接另一个页面。

    链接的语法格式

    <a href="跳转目标" target="目标窗口的弹出方式"> 文本或图像</a> 单词anchor的缩写，意为：锚。 两个属性的作用如下：

属性 	作用
href 	用于指定链接目标的URL地址，（必须属性）当为标签应用href属性时，它就具有了超链接的功能。
target 	永固指定链接页面的打开方式，其中_self为默认值，_blank为在新窗口中打开方式。

    链接分类

    外部链接：例如<a href="https://www.baidu.com"> 百度\</a>。
    内部链接：网站内部页面之间的相互链接，直接链接内部页面名称集合，例如<a href="index.html">首页\</a>
    空链接：如果当时没有确定链接目标时，<a href="#">首页</a>
    下载链接：如果href里面地址是一个文件或者压缩包，会下载这个文件。
    网页元素链接：在网页中的各种网页元素，如文本、图像、表格、音频、视频等都可以添加超链接。例图片元素链接：<a href="https://www.baidu.com"> <img src="./Pic/chrome.png" title="文件" alt="显示失败" /></a>
    锚点链接：点我们点击链接，可以快速定位到页面中的某个位置。
        在链接文本的href属性中，设置属性值为<strong><u>#名字</u></strong>的形式，如<a href="#two">第2集</a>
        找到目标位置标签，里面添加一个id属性 = 刚才的名字，如：<h3 id ="two">第二集</h3>

Day 1 2020-07-05 03:05 BilibiliPink老师视频
5. 注释标签和特殊字符
5.1 注释

如果需要在HTML文档中添加一些便于阅读和理解但又不需要显示在页面的注释文字，就需要使用注释标签。 HTML中的注释以‘<!--’开头，以'-->'结束。

<!-- 注释语句 -->     快捷键：ctrl + /

一句话：注释标签里面的内是给程序员看的，这个代码是不执行不显示到页面中的。

添加注释是为了更好地解释代码的功能，便于相关开发人员理解和阅读代码，程序是不会执行注释内容的。
5.2 特殊字符

在HTML页面中国呢，一些特殊的符号很难或者不方便直接使用，此时我们就可以使用下面的字符来替代。
特殊字符 	描述 	字符的代码
  	空格符 	&nbsp;
< 	小于号 	&lt;
> 	大于号 	&gt;
& 	和号 	&amp;
¥ 	人民币 	&yen;
©️ 	版权 	&copy;
®️ 	注册商标 	&reg;
° 	摄氏度 	&deg;
&plusm; 	正负号 	&plusm;
✖️ 	乘号 	&times;
➗ 	除号 	&divide;
² 	平方2（上标2） 	&sup2;
³ 	立方3（上标3） 	&sup3;

重点记住：空格、大于号、小于号这三个，其余的使用很少。
6. 表标签

    表格标签
    列表标签
    表单标签
    综合案例
    查阅文档

6.1 表格标签

表格是实际开发中非常常用的标签
6.1.1 表格的主要作用

表格主要用来显示、展示数据，因为它可以让数据显示得非常规整，可读性非常好。特别是后台展示数据的时候，能够熟练运用表格就显得很重要。一个清爽简约的表格能够把繁杂的数据表现得很有条理。 表格不是用来布局页面的，而是用来展示数据的。
6.1.2 表格的基本语法

<table>
    <tr>
      <td>但愿个的文字</td>
      ...
    </tr>
    ...
  </table>

    <table></table>是用于定义表格的标签。
    <tr></tr>标签用于定义表格中的行，必须嵌套在<table></table>标签中。 -<td></td>用于定义表格中的单元格，必须嵌套在<td></td>标签中。
    j字母td指的是表格数据（table data），即数据单元格的内容。

6.1.3 表头单元格标签

一般表头单元格位于表格的第一行或第一列，表头单元格里面的文本内容加粗剧中显示。 <th>标签表示HTML表格表头不分（table head的缩写）

<table>
    <tr>
    <th>姓名</th>
    ...
    </tr>
    ...
</table>

表头单元格也是单元格，常用于表格第一行，突出重要性，表头单元格里面的文字会加粗居中显示。
6.1.4 表格属性

表格标签这部分属性我们实际开发中并不常用，后面会通过CSS来设置。 目的有2个：

    记住这些英语单词，后面CSS会使用。
    直观感受表格的外观形态。

属性名 	属性值 	描述
align 	left、center、right 	规定表格相对周围元素的对齐方式。
border 	1或“” 	规定表格单元格是否拥有边框，默认为“”，表示没有边框
cellpadding 	像素值 	规定单元边缘与其内容之间的空白，默认1像素。
cellspacing 	像素值 	规定单元格之间的空白，默认2像素。
width 	像素值或百分比 	规定表格的宽度。
6.1.5 表格结构标签

使用场景：因为表格可能很长，为了更好地显示表格的语义，可以将表格分割成表格头部和表格主体两大部分。 在表格标签中，分别用：<thead>标签 表格的头部区域， <strong><thbody>标签 表格的主体区域。</strong>这样可以更好地分清表格结构。

    <thead></thead>:用于定义表格的头部。<thead>内部必须拥有<tr>标签。一般是位于第一行。
    <tbody></tbody>:用于定义表格的主体，主要用于放数据本体。
    以上两个标签都是放在<table></table>之中。

6.1.6 合并单元格

特殊情况下，可以把多个单元格合并成一个单元格，只需会最简单的合并单元格即可。

    合并单元格方式
        跨行合并：rowspan=“合并单元格的个数”
        跨列合并：colspan="合并单元格的个数"
    目标单元格
        跨行：最上侧单元格为目标单元格，写合并代码
        跨列：最左侧单元格为目标单元格，写合并代码
    合并单元格的步骤
        先确定是跨行还是跨列合并。
        找到目标单元格，协商合并方式= 合并的单元格数量。<td colspan="2"></td>。
        删除多余的单元格。

6.2 列表标签

表格是用来显示数据的，那么列表就是用来布局的。 列表最大的特点就是整齐、整洁、有序，它作为布局会更加自由和方便。 根据使用情景不同，列表可以分为三大类：无需列表、有序列表和自定义列表。
6.2.1 无序列表（重点）

<ul>标签表示HTML页面中项目的无序列表，一般会以项目符号呈现列表项，而列表项使用<li>标签定义。 无序列表的基本语法格式如下：

<ul>
  <li>列表项1</li>
  <li>列表项1</li>
  <li>列表项1</li>
  ...
  </ul>

    无序列表的各个列表项之间没有顺序级别之分，是并列的。
    <ul></ul>中只能嵌套<li></li>，直接在<ul></ul>标签中输入其他标签或者文字的做法都是不被允许的。
    <li>与</li>直接相当于一个容齐，可以容纳所有元素。
    无序列表会带自己的样式属性，但在实际使用时，我们会使用CSS来设置。

6.2.2 有序列表（理解）

有序劣币哦啊即为有序列表的列表，其各个列表项会按照一定的顺序排列定义。 在HTML标签中，<ol>标签用于定义有序列表，列表排序以数字来显示，并且使用<li>标签来定义列表项。 有序列表的基本语法格式如下：

<ol>
  <li>列表项1</li>
  <li>列表项2</li>
  <li>列表项3</li>
  ...
</ol>

    <ol></ol>中只能嵌套<li></li>，直接在<ol></ol>标签中输入其他标签或者文字的做法都是不被允许的。
    <li>与</li>直接相当于一个容齐，可以容纳所有元素。
    无序列表会带自己的样式属性，但在实际使用时，我们会使用CSS来设置。

6.2.3 自定义列表（重要）

自定义列表的使用场景：

    自定义列表常用于对术语或名次进行解释和描述，定义列表和列表项前没有任何项目符号。

在HTML标签中，<dl>标签用于定义描述列表（或定义列表），该标签会与<dt>（定义项目/名字）和<dd>（描述每一个项目/名字）一起使用。 其基本语法如下：

<dl>
  <dt>名词1</dt>
  <dd>名词1解释1</dd>
  <dd>名词1解释2</dd>
</dl>

    <dl></dl>里面只能包含<dt>和<dd>
    <dt></dt>和<dd></dd>个数没有限制，经常是一个<dt>对应多个<dd>

6.2.4 列表总结
标签名 	定义 	说明
<ul></ul> 	<strong>无序标签</strong> 	里面只能包含li，没有顺序，使用较多。li里面可以包含任何标签。
<ol></ol> 	有序标签 	里面只能包含li，有顺序，使用相对较少。li里面可以包含任何标签。
<dl></dl> 	自定义列表 	里面只能包含dt和dd。dt和dd里面可以放任何标签。

注意：

    学习什么时候使用无序列表、自定义列表
    无序列表和自定义列表代码怎么写？
    列表布局在学习完CSS后再来完成。

6.3 表单标签（重要）
6.3.1 为什么需要表单

使用表单目的是为了收集用户信息。 在我们网页中，我们页需要跟用户进行交互，收集用户资料，此时就需要表单
6.3.2 表单的组成

在HTML中，一个完整的表单通常由<strong>表单域、表单空间（也称为表单元素）</strong>和提示信息3个部分组成。
6.3.3 表单域

表单域是一个包含表单元素的区域。 在HTMl标签汇总，<form>标签用于定义表单域，以实现用户信息的收集和传递。 <strong><form>会把它范围内的表单元素信息提交给服务器。</strong>

<form action="url地址" method="提交方式" name="表单域名称">
    各种表单元素控件
</form>

常用属性：
属性 	属性值 	作用
action 	url地址 	用于指定接受并处理表数据的服务器的URL地址。
method 	get/post 	用于设置表单数据的提交方式，其取值为get或post。
name 	名称 	用于指定表单的名称，以区分同一个页面中的多个表单域。

    在我们写表单元素之前，应该有个表单域把它们进行包含。
    表单域是form标签。

6.3.4 表单控件（表单元素）

在表单域中可以定义各种表单元素，这些表单元素就是允许用户在表单出入或者选择的内容控件。

    input输入表单元素
    select下拉表单元素
    textarea文本域元素

6.4.1 <input>表单元素

在英文单词中，input是输入的意思，而在表单元素中<strong><input>标签用于收集用户信息</strong>。 在<input>，包含一个type属性，根据不同的type属性值，输入字段拥有很多种形式（可以是文本字段、复选框、掩码后的文本控件、单选按钮、按钮等。）

<input type="属性值" />

    <input/>标签为单标签
    type属性设置不同的属性值用来指定不同控件类型

<strong>type</strong>属性的属性值及其描述如下：
属性值 	描述
button 	定义可点击按钮（多数情况下，用于通过javaScript启动脚本）。
checkbox 	定义复选框。
file 	定义输入字段和“浏览”按钮，供文件上传。
hidden 	定义隐藏的输入字段。
image 	定义图像形式的提交按钮。
password 	定义密码字段，该字段中的字符被掩码。
radio 	定义单选按钮。
reset 	定义重置按钮。重置按钮会清除表单中的所有数据。
submit 	定义提交按钮。提交按钮会把表单数据发送到服务器。
text 	定义单行的输入字段，用户可以在其中输入文本。默认宽度为20个字符。

除type属性外，<input>标签还有其他很多属性，其常用属性如下：
属性 	属性值 	描述
name 	由用户自定义 	定义input元素的名称
value 	由用户自定义 	规定input元素的值。
checkbox 	checked 	规定此input元素首次加载时应被选中。
maxlength 	正整数 	规定输入字段中的字符的最大长度。

    name和value是每个表单元素都有的属性值主要给后台人员使用。
    name表单元素的名字，要求单选按钮和复选框要有相同的name值。
    checked属性主要针对单选按钮和复选框，主要作用一打开页面，就要可以默认选中某个表单元素。
    maxlength是用户可以在表单元素输入的最大字符 一般较少使用。

6.4.2 <lable>标签

<strong><label></strong>标签为input元素定义标注（标签）。 <label>标签用于绑定一个表单元素，当点击<label>标签内的文本时，浏览器就会自动将焦点（光标）转到或者选择对应的表单元素上，用来增加用户体验。 语法：

<label for="sex">男</label>
<input type="radio" name="sex" id="sex"/>

核心：<label>标签的for属性对应与相关元素的id属性相同。
6.5.1 select下拉表单元素

使用场景：在页面中，如果有多个选项让用户选择，并且想要节约页面控件时，我们可以使用<select>标签控件定义下拉列表。

语法：

<select>
    <option>选项1</option>
    <option>选项2</option>
    <option>选项3</option>    
</select>

    <select>中至少包含一对<option>。
    在<option>中定义selected="selected"时，当前项即为默认选中项。

6.5.1 textarea文本域元素

使用场景：当用户输入内容较多的情况下，我们就不能使用文本框表单了，此时我们可以使用<textarea>标签。 在表单元素中，<textarea标签是用于定义多行文本输入的控件。 使用多行文本输入控件，可以输入更多的文字，该控件常见于留言板，评论。 语法：

<textarea rows="3" cols="20">
    文本内容
</textarea>

    通过<textarea>标签可以轻松地创建多行文本输入框。
    cols="每行地字符数"，rows=“显示的行数”，实际开发不会使用，都是CSS来改变大小。

6.6 查阅文档

经常查阅文档是一个非常好的学习习惯。 推荐的网址：

    百度:https://www.baidu.com
    W3C:https://www.w3school.com.cn
    MDN:https://developer.mozilla.org/zh-CN/

<br/>
